apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      initContainers:
      - name: init
        image: {{ .Values.initcontainer.image.repository }}:{{ .Values.initcontainer.image.tag }} 
        command:
        - sh
        - -c
        - sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.forwarding=1
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
      containers:
      - name: wireguard
        image: {{ .Values.wireguard.image.repository }}:{{ .Values.wireguard.image.tag }}
        imagePullPolicy: {{ .Values.wireguard.image.pullPolicy }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        ports:
        - containerPort: {{ .Values.config.interface.port }}
          protocol: UDP
          name: wg0
        - containerPort: 8080
          protocol: TCP
          name: heathcheck
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          failureThreshold: 5
          periodSeconds: 10          
        command:
        - sh
        - -c
        - /entrypoint.sh
        env:
        - name: LOG_LEVEL
          value: warn
        resources:
          requests:
            memory: "64Mi"
            cpu: "150m"
          limits:
            memory: "128Mi"
        volumeMounts:
        - name: {{ .Release.Name }}-secret
          mountPath: /etc/wireguard/wg0.key
          subPath: wg0.key
          readOnly: true
        - name: {{ .Release.Name }}-config
          mountPath: /etc/wireguard/wg0.conf
          subPath: wg0.conf
          readOnly: true
      volumes:
      - name: {{ .Release.Name }}-secret
        secret:
          secretName: {{ .Release.Name }}-secret
          items:
          - key: "wg0.key"
            path: "wg0.key"
      - name: {{ .Release.Name }}-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
          - key: "wg0.conf"
            path: "wg0.conf"
